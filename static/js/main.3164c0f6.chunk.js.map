{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","constant.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","event","target","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","EmptyList","TEXTS","users","isLoading","isFavoritesView","getStoredFavoriteUsers","useState","hoveredUserId","setHoveredUserId","filtersList","setfiltersList","favoriteUsers","setFavoriteUsers","countryFilters","setCountryFilters","formInput","setFormInput","isInputVisible","setIsInputVisible","isUserFavorite","inputUser","find","user","login","uuid","handleMouseLeave","handleChange","tempFiltersList","push","filter","element","map","toLowerCase","includes","location","country","length","className","countryName","key","Button","onClick","onSubmit","preventDefault","tempFilters","TextField","placeholder","C","required","type","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","newFavoriteUsers","localStorage","setItem","JSON","stringify","handleFavButton","Home","Content","Header","setNavValue","handleActivePage","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","useEffect","usePeopleFetch","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createTheme","palette","primary","main","error","CssBaseline","NavBar","navValue","AppBar","position","style","top","Tabs","_e","newValue","indicatorColor","textColor","Tab","to","component","Link","AppRouter","getItem","parse","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.3164c0f6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\n  const handleChange = (event) => {\n    onChange && onChange(label,event.target.checked);\n  };\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\nexport const EmptyList = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size:22px;\n`;\n","export const SIZE = {\n  small: \"small\",\n  medium: \"medium\",\n  large: \"large\",\n};\n\nexport const VARIANT = {\n  text: \"text\",\n  filled: \"filled\",\n  outlined: \"outlined\",\n  standard: \"standard\",\n  contained: \"contained\",\n};\n\nexport const COLORS = {\n  default: \"default\",\n  inherit: \"inherit\",\n  primary: \"primary\",\n  secondary: \"secondary\",\n};\nexport const TEXTS = {\n  NO_USERS: \"No users to show\",\n  NEW_FILTER: \"New country filter\"\n};\n","import React, { useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Add from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nimport \"./userListStyle.css\"\r\nimport * as S from \"./style\";\r\n\r\nimport * as C from \"constant\";\r\n\r\n\r\nconst UserList = ({ users, isLoading,isFavoritesView,getStoredFavoriteUsers}) => {\r\n  let basicCountries = ['Brazil','Australia','Canada','Germany'];\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [filtersList, setfiltersList] = useState([]);\r\n  const [favoriteUsers, setFavoriteUsers] = useState(getStoredFavoriteUsers());\r\n  const [countryFilters, setCountryFilters] = useState(basicCountries);\r\n  const [formInput, setFormInput] = useState();\r\n  const [isInputVisible, setIsInputVisible] = useState(false);\r\n\r\n  const isUserFavorite = (inputUser) => {\r\n    if(inputUser)\r\n    {\r\n      return favoriteUsers.find(user => user.login.uuid === inputUser.login.uuid);  \r\n    }\r\n  };\r\n  \r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };  \r\n  \r\n  const handleFavButton = (inputUser) => {\r\n  \r\n    let newFavoriteUsers;\r\n\r\n    if(!favoriteUsers.find(user => user.login.uuid === inputUser.login.uuid)){\r\n      newFavoriteUsers = [...favoriteUsers,inputUser];\r\n    }\r\n    else{\r\n      newFavoriteUsers = favoriteUsers.filter(user => user.login.uuid !== inputUser.login.uuid)\r\n    }\r\n\r\n    setFavoriteUsers(newFavoriteUsers);\r\n    localStorage.setItem(\"favoriteUsersList\", JSON.stringify(newFavoriteUsers));\r\n\r\n  };\r\n\r\n  const handleChange = (value, isChecked)  => {\r\n\r\n    var tempFiltersList = [...filtersList];\r\n    \r\n    if(isChecked){\r\n      tempFiltersList.push(value);\r\n    }\r\n    else{\r\n      tempFiltersList = tempFiltersList.filter(element => element !== value);\r\n    } \r\n    setfiltersList(tempFiltersList);\r\n\r\n  };\r\n\r\n  const handeInput = (event) => {\r\n    setFormInput(event.target.value);\r\n  };  \r\n\r\n  const handleSubmitFilter = (event) => {\r\n    event.preventDefault();\r\n    let tempFilters = [...countryFilters];\r\n    tempFilters.push(formInput);\r\n    setCountryFilters(tempFilters);\r\n    setFormInput(\"\");\r\n  };  \r\n  \r\n  const handleAddFilterBtn = () => {\r\n    setIsInputVisible(!isInputVisible);\r\n  };\r\n  \r\n  if(isFavoritesView){\r\n    users = getStoredFavoriteUsers();\r\n  }\r\n\r\n  users = users.filter(user => filtersList.map(filter => filter.toLowerCase()).includes(user.location.country.toLowerCase()) || filtersList.length == 0);\r\n\r\n    return (\r\n      \r\n      <S.UserList className=\"mainContainer\">\r\n        <S.Filters>\r\n          {\r\n            countryFilters.map((countryName,key) => {\r\n              return (\r\n                <CheckBox label={countryName} key={key} onChange={handleChange} />\r\n              );\r\n            })\r\n          }\r\n          <Button variant=\"outlined\" className=\"addFilterBtn\" onClick={handleAddFilterBtn} color=\"primary\">\r\n            {isInputVisible ?  <RemoveIcon /> : <Add />}\r\n          </Button>\r\n        </S.Filters>\r\n        {\r\n          isInputVisible && (        \r\n          <form className=\"customForm\" onSubmit={handleSubmitFilter}>\r\n            <TextField  placeholder={C.TEXTS.NEW_FILTER} value={formInput} className=\"filterInput\" required label=\"Country name\" variant=\"outlined\" onChange={handeInput}/>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"submitFilterBtn\"><CheckIcon /></Button>\r\n          </form>\r\n        )}\r\n\r\n        <S.List>\r\n          \r\n          {users?.map((user, index) => {\r\n            \r\n             return (\r\n                  <S.User\r\n                    key={index} uuid={user?.login.uuid}\r\n                    onMouseEnter={() => handleMouseEnter(index)}\r\n                    onMouseLeave={handleMouseLeave}\r\n                  >\r\n                    <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                    <S.UserInfo>\r\n                      <Text size=\"22px\" bold>\r\n                        {user?.name.title} {user?.name.first} {user?.name.last}\r\n                      </Text>\r\n                      <Text size=\"14px\">{user?.email}</Text>\r\n                      <Text size=\"14px\">\r\n                        {user?.location.street.number} {user?.location.street.name}\r\n                      </Text>\r\n                      <Text size=\"14px\">\r\n                        {user?.location.city} {user?.location.country}\r\n                      </Text>\r\n                    </S.UserInfo>\r\n                    <S.IconButtonWrapper isVisible={index === hoveredUserId || isUserFavorite(user)}>\r\n                      <IconButton onClick={()=>{handleFavButton(user)}}>\r\n                        <FavoriteIcon color=\"error\" />\r\n                      </IconButton>\r\n                    </S.IconButtonWrapper>\r\n                  </S.User>\r\n                );\r\n            \r\n          })}\r\n          {isLoading && (\r\n            <S.SpinnerWrapper>\r\n              <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n            </S.SpinnerWrapper>\r\n          )}\r\n        {users.length === 0 && !isLoading && (\r\n          <S.EmptyList>{C.TEXTS.NO_USERS}</S.EmptyList>\r\n        )}\r\n\r\n        </S.List>\r\n\r\n      </S.UserList>\r\n\r\n    );    \r\n\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React , { useState } from 'react';\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\n\nconst Home = ({getStoredFavoriteUsers, setNavValue, isFavoritesView, handleActivePage}) => {\n  const { users, isLoading } = usePeopleFetch();\n  handleActivePage(isFavoritesView);\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n        <UserList users={!isFavoritesView ? users : []} isFavoritesView={isFavoritesView} isLoading={isLoading} getStoredFavoriteUsers={getStoredFavoriteUsers}/>\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  async function fetchUsers() {\n    setIsLoading(true);\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\n    setIsLoading(false);\n    setUsers(response.data.results);\n  }\n\n  return { users, isLoading, fetchUsers };\n};\n","import React from \"react\";\nimport { createTheme , ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    \n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n    createTheme ({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Link  } from \"react-router-dom\";\n\nconst NavBar = ({navValue, setNavValue}) => {\n\n  const handleChange = (_e, newValue) => {\n    setNavValue(newValue);\n  };\n  return (\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\n      <Tabs\n        value={navValue}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab label=\"Home\" index={0} to=\"/\" component={Link}/>\n        <Tab label=\"Favorites\" to=\"/Favorites\" index={1} component={Link}/>\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React,{useState} from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\n\nconst AppRouter = () => {\n  const [navValue, setNavValue] = useState(0);\n\n  const getStoredFavoriteUsers = () => {\n    if(localStorage.getItem(\"favoriteUsersList\")){\n      return JSON.parse(localStorage.getItem(\"favoriteUsersList\"));\n    }\n    return [];\n  }\n\n  const handleActivePage = (isFavoritesView) => {\n    setNavValue((isFavoritesView ? 1 : 0), 0);\n  };\n\n  return (\n    <ThemeProvider>\n      <Router>\n        <NavBar setNavValue={setNavValue} navValue={navValue}/>\n        <Switch>\n          <Route exact path=\"/\" component={()=><Home handleActivePage={handleActivePage} isFavoritesView={false} getStoredFavoriteUsers={getStoredFavoriteUsers} setNavValue={setNavValue}/>} />\n          <Route exact path=\"/Favorites\" component={()=><Home handleActivePage={handleActivePage} isFavoritesView={true}   getStoredFavoriteUsers={getStoredFavoriteUsers} setNavValue={setNavValue}/>} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}