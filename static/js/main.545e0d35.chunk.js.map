{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","constant.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","event","target","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","EmptyList","TEXTS","LOCAL","users","isLoading","isFavoritesView","getStoredFavoriteUsers","useState","hoveredUserId","setHoveredUserId","filtersList","setfiltersList","favoriteUsers","setFavoriteUsers","countryFilters","setCountryFilters","formInput","setFormInput","isInputVisible","setIsInputVisible","isUserFavorite","inputUser","find","user","login","uuid","handleMouseLeave","handleChange","tempFiltersList","push","filter","element","map","toLowerCase","includes","location","country","length","className","countryName","key","Tooltip","title","C","Button","onClick","onSubmit","preventDefault","tempFilters","TextField","placeholder","required","type","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","first","last","email","street","number","city","IconButton","newFavoriteUsers","localStorage","setItem","JSON","stringify","handleFavButton","Home","Content","Header","setNavValue","handleActivePage","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","useEffect","usePeopleFetch","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createTheme","palette","primary","main","error","CssBaseline","NavBar","navValue","AppBar","position","style","top","Tabs","_e","newValue","indicatorColor","textColor","Tab","to","component","Link","AppRouter","getItem","parse","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.545e0d35.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = (event) => {\r\n    onChange && onChange(label,event.target.checked);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\nexport const EmptyList = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size:22px;\r\n`;\r\n","export const SIZE = {\r\n  small: \"small\",\r\n  medium: \"medium\",\r\n  large: \"large\",\r\n};\r\n\r\nexport const VARIANT = {\r\n  text: \"text\",\r\n  filled: \"filled\",\r\n  outlined: \"outlined\",\r\n  standard: \"standard\",\r\n  contained: \"contained\",\r\n};\r\n\r\nexport const COLORS = {\r\n  default: \"default\",\r\n  inherit: \"inherit\",\r\n  primary: \"primary\",\r\n  secondary: \"secondary\",\r\n};\r\nexport const TEXTS = {\r\n  NO_USERS: \"No users to show\",\r\n  NEW_FILTER: \"New country filter\",\r\n  NEW_FILTER_BTN: \"Add new filter\",\r\n  HIDE_FILTER_BTN: \"Hide field\",\r\n};\r\nexport const LOCAL = {\r\n  FAVE_USERS : \"favoriteUsersList\"\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Add from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nimport \"./userListStyle.css\"\r\nimport * as S from \"./style\";\r\n\r\nimport * as C from \"constant\";\r\n\r\n\r\nconst UserList = ({ users, isLoading,isFavoritesView,getStoredFavoriteUsers}) => {\r\n  let basicCountries = ['Brazil','Australia','Canada','Germany'];\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [filtersList, setfiltersList] = useState([]);\r\n  const [favoriteUsers, setFavoriteUsers] = useState(getStoredFavoriteUsers());\r\n  const [countryFilters, setCountryFilters] = useState(basicCountries);\r\n  const [formInput, setFormInput] = useState();\r\n  const [isInputVisible, setIsInputVisible] = useState(false);\r\n\r\n  const isUserFavorite = (inputUser) => {\r\n    if(inputUser)\r\n    {\r\n      return favoriteUsers.find(user => user.login.uuid === inputUser.login.uuid);  \r\n    }\r\n  };\r\n  \r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };  \r\n  \r\n  const handleFavButton = (inputUser) => {\r\n  \r\n    let newFavoriteUsers;\r\n\r\n    if(!favoriteUsers.find(user => user.login.uuid === inputUser.login.uuid)){\r\n      newFavoriteUsers = [...favoriteUsers,inputUser];\r\n    }\r\n    else{\r\n      newFavoriteUsers = favoriteUsers.filter(user => user.login.uuid !== inputUser.login.uuid)\r\n    }\r\n\r\n    setFavoriteUsers(newFavoriteUsers);\r\n    localStorage.setItem(C.LOCAL.FAVE_USERS, JSON.stringify(newFavoriteUsers));\r\n\r\n  };\r\n\r\n  const handleChange = (value, isChecked)  => {\r\n\r\n    var tempFiltersList = [...filtersList];\r\n    \r\n    if(isChecked){\r\n      tempFiltersList.push(value);\r\n    }\r\n    else{\r\n      tempFiltersList = tempFiltersList.filter(element => element !== value);\r\n    } \r\n    setfiltersList(tempFiltersList);\r\n\r\n  };\r\n\r\n  const handeInput = (event) => {\r\n    setFormInput(event.target.value);\r\n  };  \r\n\r\n  const handleSubmitFilter = (event) => {\r\n    event.preventDefault();\r\n    let tempFilters = [...countryFilters];\r\n    tempFilters.push(formInput);\r\n    setCountryFilters(tempFilters);\r\n    setFormInput(\"\");\r\n  };  \r\n  \r\n  const handleAddFilterBtn = () => {\r\n    setIsInputVisible(!isInputVisible);\r\n  };\r\n  \r\n  if(isFavoritesView){\r\n    users = getStoredFavoriteUsers();\r\n  }\r\n\r\n  users = users.filter(user => filtersList.map(filter => filter.toLowerCase()).includes(user.location.country.toLowerCase()) || filtersList.length == 0);\r\n\r\n    return (\r\n      \r\n      <S.UserList className=\"mainContainer\">\r\n        <S.Filters>\r\n          {\r\n            countryFilters.map((countryName,key) => {\r\n              return (\r\n                <CheckBox label={countryName} key={key} onChange={handleChange} />\r\n              );\r\n            })\r\n          }\r\n          <Tooltip title={isInputVisible ? C.TEXTS.HIDE_FILTER_BTN : C.TEXTS.NEW_FILTER_BTN}>\r\n            <Button variant=\"outlined\" className=\"addFilterBtn\" onClick={handleAddFilterBtn} color=\"primary\">\r\n              {isInputVisible ?  <RemoveIcon /> : <Add />}\r\n            </Button>\r\n          </Tooltip>\r\n        </S.Filters>\r\n        {\r\n          isInputVisible && (        \r\n          <form className=\"customForm\" onSubmit={handleSubmitFilter}>\r\n            <TextField  placeholder={C.TEXTS.NEW_FILTER} value={formInput} className=\"filterInput\" required label=\"Country name\" variant=\"outlined\" onChange={handeInput}/>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"submitFilterBtn\"><CheckIcon /></Button>\r\n          </form>\r\n        )}\r\n\r\n        <S.List>\r\n          \r\n          {users?.map((user, index) => {\r\n            \r\n             return (\r\n                  <S.User\r\n                    key={index} uuid={user?.login.uuid}\r\n                    onMouseEnter={() => handleMouseEnter(index)}\r\n                    onMouseLeave={handleMouseLeave}\r\n                  >\r\n                    <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                    <S.UserInfo>\r\n                      <Text size=\"22px\" bold>\r\n                        {user?.name.title} {user?.name.first} {user?.name.last}\r\n                      </Text>\r\n                      <Text size=\"14px\">{user?.email}</Text>\r\n                      <Text size=\"14px\">\r\n                        {user?.location.street.number} {user?.location.street.name}\r\n                      </Text>\r\n                      <Text size=\"14px\">\r\n                        {user?.location.city} {user?.location.country}\r\n                      </Text>\r\n                    </S.UserInfo>\r\n                    <S.IconButtonWrapper isVisible={index === hoveredUserId || isUserFavorite(user)}>\r\n                      <IconButton onClick={()=>{handleFavButton(user)}}>\r\n                        <FavoriteIcon color=\"error\" />\r\n                      </IconButton>\r\n                    </S.IconButtonWrapper>\r\n                  </S.User>\r\n                );\r\n            \r\n          })}\r\n          {isLoading && (\r\n            <S.SpinnerWrapper>\r\n              <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n            </S.SpinnerWrapper>\r\n          )}\r\n        {users.length === 0 && !isLoading && (\r\n          <S.EmptyList>{C.TEXTS.NO_USERS}</S.EmptyList>\r\n        )}\r\n\r\n        </S.List>\r\n\r\n      </S.UserList>\r\n\r\n    );    \r\n\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from 'react';\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst Home = ({getStoredFavoriteUsers, setNavValue, isFavoritesView, handleActivePage}) => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n\r\n  handleActivePage(isFavoritesView);\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={!isFavoritesView ? users : []} isFavoritesView={isFavoritesView} isLoading={isLoading} getStoredFavoriteUsers={getStoredFavoriteUsers}/>\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport { createTheme , ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    \r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n    createTheme ({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link  } from \"react-router-dom\";\r\n\r\nconst NavBar = ({navValue, setNavValue}) => {\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setNavValue(newValue);\r\n  };\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={navValue}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} to=\"/\" component={Link}/>\r\n        <Tab label=\"Favorites\" to=\"/Favorites\" index={1} component={Link}/>\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React,{useState} from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nimport * as C from \"constant\";\r\n\r\nconst AppRouter = () => {\r\n  const [navValue, setNavValue] = useState(0);\r\n\r\n  const getStoredFavoriteUsers = () => {\r\n    if(localStorage.getItem(C.LOCAL.FAVE_USERS)){\r\n      return JSON.parse(localStorage.getItem(C.LOCAL.FAVE_USERS));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const handleActivePage = (isFavoritesView) => {\r\n    setNavValue((isFavoritesView ? 1 : 0), 0);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar setNavValue={setNavValue} navValue={navValue}/>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={()=><Home handleActivePage={handleActivePage} isFavoritesView={false} getStoredFavoriteUsers={getStoredFavoriteUsers} setNavValue={setNavValue}/>} />\r\n          <Route exact path=\"/Favorites\" component={()=><Home handleActivePage={handleActivePage} isFavoritesView={true}   getStoredFavoriteUsers={getStoredFavoriteUsers} setNavValue={setNavValue}/>} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}